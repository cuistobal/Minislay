MAN:
	->	TD	->	Still needs to be done	
	->	OK	->	Done and implemented
	->	OG	->	Ongoing implementation
	->	OGT	->	Ongoing test phase
	->	TDB	->	To be discussed

OG	->	Read, Test & Modify the lexer's new version.

	OK	->	Enforce norminette.
		
	TD	->	Modify the tester to ensure syntax rules are correctly handled

	OGT	->	Implement assignation and expension in the tokenization logic, for
			basic input and input inside double quotes

			Ongoing version is spliting the token once it finds one of the IAE
			identifiers. Yet, the fact more than 1 IAE can be found within the
			token's value || the fact that some words might still be present
			after the IAE is not handled yet.

TD	->	Modify the **token_list's structure.

		We need 1 sublist per () block to prepare the execution_tree() && subshell()
		modules.
		
		Example:

		((echo "bonjour" || echo "au revoir") && (echo "toi" || echo "iot")) && echo "gg wp"	
		
		S0S1:																	S0S2:
		((echo "bonjour" || echo "au revoir") && (echo "toi" || echo "iot"))	echo "gg wp"

		S1S1:								S1S2:								
		echo "bonjour" || echo "au revoir"	echo "toi" || echo "iot"

TBD	->	Also, how does execution knows where the fds are without traversing the
		whole tree ?
